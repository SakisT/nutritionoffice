@model nutritionoffice.ViewModels.appointmentreminder

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="~/dateimepicker/jquery.datetimepicker.css" />



<h2>@Resource.CreateNewAppointment</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@ViewBag.CustomerName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.reminder.SMSState)
        @Html.HiddenFor(model => model.reminder.MailState)
        @Html.HiddenFor(model => model.appointment.State)

        @if (ViewBag.SelectCustomer == true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.appointment.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-xs-10 col-md-5">
                    @Html.DropDownList("appointment.CustomerID", (SelectList)ViewBag.CustomerID, Resource.SelectCustomer, htmlAttributes: new { @class = "form-control", id = "appointmentcustomer" })
                    @Html.ValidationMessageFor(model => model.appointment.CustomerID, "", new { @class = "text-danger" })
                </div>
                <div class="col-xs-2 col-md-1">
                    <input type="color" class="form-control" name="appointment.Color" value="@Model.appointment.Color" />
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.appointment.CustomerID)
        }

        <!-- Appointment Date And Time -->
        <div class="form-group">
            @Html.LabelFor(model => model.appointment.Date, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-2">
                <input type="text" name="appointment.Date" id="appointmentdate" class="form-control datepicker" value="@Model.appointment.Date" style="background-color:#fcfbad" />
                @Html.ValidationMessageFor(model => model.appointment.Date, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-8">
                <label class="control-label" style="float:left">@Resource.From</label>
                <div class="col-md-5">
                    <div class="col-md-5" style="float:left">
                        @Html.DropDownList("appointment.FromTime_Hour", (SelectList)ViewBag.FromHours, null, htmlAttributes: new { @class = "form-control", @id = "fromtimehour" })
                    </div>
                    <div style="float:left;font-size:1.8em">
                        :
                    </div>
                    <div class="col-md-5" style="float:left">
                        @Html.DropDownList("appointment.FromTime_Minutes", (SelectList)ViewBag.FromMinutes, null, htmlAttributes: new { @class = "form-control", @id = "fromtimeminutes" })
                    </div>
                </div>
                <label class="control-label" style="float:left">@Resource.to</label>
                <div class="col-md-5">
                    <div class="col-md-5" style="float:left">
                        @Html.DropDownList("appointment.ToTime_Hour", (SelectList)ViewBag.ToHours, null, htmlAttributes: new { @class = "form-control", @id = "totimehour" })
                    </div>
                    <div style="float:left;font-size:1.8em">
                        :
                    </div>
                    <div class="col-md-5" style="float:left">
                        @Html.DropDownList("appointment.ToTime_Minutes", (SelectList)ViewBag.ToMinutes, null, htmlAttributes: new { @class = "form-control", @id = "totimeminutes" })
                    </div>
                </div>
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.appointment.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-xs-10 col-md-5">
                @Html.EditorFor(model => model.appointment.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.appointment.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reminder.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-xs-10 col-md-3">
                @Html.EditorFor(model => model.reminder.Message, new { htmlAttributes = new { @class = "form-control", @id = "appointmentmessage" } })
                @Html.ValidationMessageFor(model => model.reminder.Message, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.reminder.OnDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-xs-10 col-md-2">
                @*@Html.EditorFor(model => model.reminder.OnDate, new { htmlAttributes = new { @class = "form-control", id = "remindon" } })*@
                <input type="text" class="form-control" name="reminder.OnDate" id="remindon" value="@Model.reminder.OnDate.ToString("d/M/yyyy H:mm")" data-date-format="d/M/yy H:mm" />
                @Html.ValidationMessageFor(model => model.reminder.OnDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reminder.SendEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-xs-10 col-md-1">
                @Html.EditorFor(model => model.reminder.SendEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.reminder.SendEmail, "", new { @class = "text-danger" })
            </div>

            <div class="col-xs-10 col-md-3">
                @Html.EditorFor(model => model.reminder.email, new { htmlAttributes = new { @class = "form-control", id = "email" } })
                @Html.ValidationMessageFor(model => model.reminder.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.reminder.SendSMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-xs-10 col-md-1">
                @Html.EditorFor(model => model.reminder.SendSMS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.reminder.SendSMS, "", new { @class = "text-danger" })
            </div>

            <div class="col-xs-10 col-md-2">
                @Html.EditorFor(model => model.reminder.Mobile, new { htmlAttributes = new { @class = "form-control", id = "mobile" } })
                @Html.ValidationMessageFor(model => model.reminder.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-xs-10 col-md-5">
                <input type="submit" value="@Resource.Create" class="btn btn-warning" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(nutritionoffice.Resource.BacktoList, "Index")
</div>

<script src="~/dateimepicker/jquery.datetimepicker.js"></script>
<script src="~/dateimepicker/jquery.datetimepicker.full.js"></script>
<script>
    $.datetimepicker.setLocale('el');
    $('.datetimepicker').datetimepicker({
        datepicker: false,
        format: 'H:i',
        timepicker: true,
        allowTimes: [
                '09:00', '09:15', '09:30', '09:45',
                '10:00', '10:15', '10:30', '10:45',
                '11:00', '11:15', '11:30', '11:45',
                '12:00', '12:15', '12:30', '12:45',
                '13:00', '13:15', '13:30', '13:45',
                '14:00', '14:15', '14:30', '14:45',
                '15:00', '15:15', '15:30', '15:45',
                '16:00', '16:15', '16:30', '16:45',
                '17:00', '17:15', '17:30', '17:45',
                '18:00', '18:15', '18:30', '18:45',
                '19:00', '19:15', '19:30', '19:45',
                '21:00', '21:15', '21:30', '21:45',
                '22:00', '22:15', '22:30', '22:45',
        ]
    });
    $(document).ready(function () {
        $('#appointmentcustomer').on('change', function (event) {
            var customerid = $(this).val();
            if (customerid > 0) {
                var serviceURL = '@Url.Action("GetCustomerByid", "Customers")';
                $.getJSON(serviceURL, { id: customerid }, function (data) {
                    $('#email').val(data.email);
                    $('#mobile').val(data.Mobile);
                });
            }
            else {
                $('#email').val('');
                $('#mobile').val('');
            }
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

